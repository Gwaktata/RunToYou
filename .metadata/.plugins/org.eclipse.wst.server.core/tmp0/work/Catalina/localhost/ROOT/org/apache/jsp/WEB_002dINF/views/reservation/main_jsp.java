/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-04-21 03:25:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.reservation;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(6);
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-5.2.5.RELEASE.jar", Long.valueOf(1643080481968L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar", Long.valueOf(1644822111181L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final_project/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1532606274000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1643079176937L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final_project/WEB-INF/lib/spring-webmvc-5.2.5.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1585016652000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005fselect_0026_005fstyle_005fpath_005fid;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005fselect_0026_005fstyle_005fpath_005fid = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction.release();
    _005fjspx_005ftagPool_005fform_005fselect_0026_005fstyle_005fpath_005fid.release();
    _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String pntNm = request.getParameter("pntNm");
	String pntCd = request.getParameter("pntCd");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/fullcalendar/main.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"/resources/vendors/niceselect/css/nice-select.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/reservation/main.css\"\r\n");
      out.write("\ttype=\"text/css\" />\r\n");
      out.write("<script src=\"/resources/fullcalendar/main.js\"></script>\r\n");
      out.write("<script src=\"/resources/fullcalendar/ko.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@9\"></script>\r\n");
      out.write("<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function() {\r\n");
      out.write("\tvar csrfParameter = $(\"meta[name=_csrf_parameter]\").attr(\"content\");\r\n");
      out.write("\tvar csrfHeader = $(\"meta[name=_csrf_header]\").attr(\"content\");\r\n");
      out.write("\tvar csrfToken = $(\"meta[name=_csrf]\").attr(\"content\");\r\n");
      out.write("\t\ttoday = new Date();\r\n");
      out.write("\t\ttoday.setHours(today.getHours() + 9)\r\n");
      out.write("\t\tcurrentdate = today.toISOString().split('T')[0];\t//2022-03-31\r\n");
      out.write("\t\tcurrenttime = today.toISOString().split('T')[1].substring(0,5);\t\t//09:00\r\n");
      out.write("\t\tspcurrenttime = currenttime.split(':')[0]+currenttime.split(':')[1];\t\t//09:00\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\t\r\n");
      out.write("// \tconsole.log('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.deptNm}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\r\n");
      out.write("\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.deptNm}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'.trim()=='진료부'){\r\n");
      out.write("\t\t$('#selectmajor').val('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.secNm}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("').prop(\"selected\",true);\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$('#selectmajor').val('전체부서').prop(\"selected\",true);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//selectbox에 의사 출력\r\n");
      out.write("\tvar data = {};\r\n");
      out.write("\r\n");
      out.write("\tdata[csrfParameter]=csrfToken;\r\n");
      out.write("\tdata[\"major\"] = $(\"#selectmajor option:selected\").val();\r\n");
      out.write("\r\n");
      out.write("\t//예약 목록 내 의사 선택\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"/reservation/doctorList\",\r\n");
      out.write("\t\tmethod: \"post\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function(dres) {\r\n");
      out.write("\t\t\t//console.log(dres);\r\n");
      out.write("\t\t\t//alert(dres)\r\n");
      out.write("\t\t\tvar listHtml = '<option value=\"\" label=\"=담당의사=\">=담당의사=</option>';\r\n");
      out.write("\t\t\tif(dres!=''){\r\n");
      out.write("\t\t\t\tfor(var i in dres){\r\n");
      out.write("\t\t\t\t\tlistHtml +='<option id=\"optdoc\" label=\"'+dres[i].empNm+'\">'+dres[i].empNm+'_'+dres[i].empCd+'</option>';\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$(\"#chrDr\").html(listHtml);\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\t//진료부서 별 예약목록 출력\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"/reservation/majorresList\",\r\n");
      out.write("\t\tmethod:\"get\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function (res) {\r\n");
      out.write("\t\t\tvar mList = new Array();\r\n");
      out.write("\t\t\t//console.log(jsonData)\r\n");
      out.write("\t\t\t$.each(res, function(i, v) {\r\n");
      out.write("\t\t\t\t$.each(v.reservation, function(j, k){\r\n");
      out.write("\t\t\t\t\tvar data = new Object();\r\n");
      out.write("\t\t\t\t\tdata.pntNm = k.pntNm;\r\n");
      out.write("\t\t\t\t\tdata.rsvtNo = k.rsvtNo;\r\n");
      out.write("\t\t\t\t\tdata.rsvtDt = k.rsvtDt;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\tmList.push(data);\r\n");
      out.write("\t\t\t\t})\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\tvar jsonData = JSON.stringify(mList) ;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t    var Calendar = FullCalendar.Calendar;\r\n");
      out.write("\t\t    var Draggable = FullCalendar.Draggable;\r\n");
      out.write("\t\t    var calendarEl = document.getElementById('calendar');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    var events = mList.map(function(item) {\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\ttitle : item.pntNm +\" \"+ item.rsvtNo,\r\n");
      out.write("\t\t\t\t\tstart : item.rsvtDt.substring(0,4) + '-' + item.rsvtDt.substring(4,6) + '-' + item.rsvtDt.substring(6,8)  \r\n");
      out.write("\t\t\t\t\t\t\t+ \"T\" + item.rsvtDt.substring(8,10) + ':' + item.rsvtDt.substring(10,12) + ':'+item.rsvtDt.substring(12,14)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    // initialize the calendar\r\n");
      out.write("\t\t    // -----------------------------------------------------------------\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    var calendar = new Calendar(calendarEl, {\r\n");
      out.write("\t\t      headerToolbar: {\r\n");
      out.write("\t\t        left: 'prev,next today',\r\n");
      out.write("\t\t        center: 'title',\r\n");
      out.write("\t\t        right: 'dayGridMonth,timeGridWeek'\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      initialView: 'dayGridMonth',\r\n");
      out.write("\t\t      selectable:true,\r\n");
      out.write("\t\t      editable: true,\r\n");
      out.write("\t\t      droppable: true, // this allows things to be dropped onto the calendar\r\n");
      out.write("\t\t      drop: function(info) {\r\n");
      out.write("\t\t        // is the \"remove after drop\" checkbox checked?\r\n");
      out.write("\t\t        if (checkbox.checked) {\r\n");
      out.write("\t\t          // if so, remove the element from the \"Draggable Events\" list\r\n");
      out.write("\t\t          info.draggedEl.parentNode.removeChild(info.draggedEl);\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      locale:'ko',\r\n");
      out.write("\t\t      events: events,\r\n");
      out.write("\t\t      eventTimeFormat: {\r\n");
      out.write("\t\t\t\t    hour: '2-digit',\r\n");
      out.write("\t\t\t\t    minute: '2-digit',\r\n");
      out.write("\t\t\t\t    hour12: false\r\n");
      out.write("\t\t\t\t  }\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t    //console.log(events)\r\n");
      out.write("\t\t    calendar.render()\r\n");
      out.write("\t\t}//end of success\r\n");
      out.write("\t});//end of ajax\r\n");
      out.write("\t\r\n");
      out.write("\t//=======================================================================\r\n");
      out.write("\t\r\n");
      out.write("\tvar data = {};\r\n");
      out.write("\r\n");
      out.write("\tdata[csrfParameter]=csrfToken;\r\n");
      out.write("\tdata[\"empCd\"] = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.empCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("\t//예약 목록 내 의사 선택\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"/reservation/doctor\",\r\n");
      out.write("\t\tmethod: \"post\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function(dres) {\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar data2 = {};\r\n");
      out.write("\r\n");
      out.write("\t\t\tdata2[csrfParameter]=csrfToken;\r\n");
      out.write("\t\t\tdata2[\"empCd\"] = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.empCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//console.log(dres.length)\r\n");
      out.write("\t\t\tif(dres.length == 1){//로그인 한 사람이 의사 \r\n");
      out.write("\t\t\t\t//진료부서 별 예약 목록 \r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl:\"/reservation/resdoctorList\",\r\n");
      out.write("\t\t\t\t\tmethod: \"post\",\r\n");
      out.write("\t\t\t\t\tdata: data2,\r\n");
      out.write("\t\t\t\t\tdataType:\"html\",\r\n");
      out.write("\t\t\t\t\ttraditional:\"true\",\r\n");
      out.write("\t\t\t\t\tsuccess: function(res) {\r\n");
      out.write("\t\t\t\t\tconsole.log(res)\r\n");
      out.write("\t\t\t\t\t\tvar html = $(\"<div>\").html(res);\r\n");
      out.write("\t\t\t\t\t\tvar contents = html.find(\"div#doctoroutput\").html();\r\n");
      out.write("\t\t\t\t\t\t$(\"#resemplist\").html(contents);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}else if(dres.length != 1){//로그인 한 사람이 의사가 아니야\r\n");
      out.write("\t\t\t\t//진료부서 별 예약 목록 \r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl:\"/reservation/resdoctorList\",\r\n");
      out.write("\t\t\t\t\tmethod: \"post\",\r\n");
      out.write("\t\t\t\t\tdata: data2,\r\n");
      out.write("\t\t\t\t\tdataType:\"html\",\r\n");
      out.write("\t\t\t\t\ttraditional:\"true\",\r\n");
      out.write("\t\t\t\t\tsuccess: function(res) {\r\n");
      out.write("\t\t\t\t\t\tvar html = $(\"<div>\").html(res);\r\n");
      out.write("\t\t\t\t\t\tvar contents = html.find(\"div#otheroutput\").html();\r\n");
      out.write("\t\t\t\t\t\t$(\"#resemplist\").html(contents);\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\t//금일예약내역의 환자를 클릭 시 접수되게(예약에서 상태를 대기로 변경)\r\n");
      out.write("\t$(document).on(\"click\",\"#tbltr\", function(){\r\n");
      out.write("\t\t//var pntclick = $(this).attr(\"class\");\r\n");
      out.write("\t\tvar waitState = $(this).children('td').eq(2).text();\r\n");
      out.write("\t\tif(waitState=='미완료'){\r\n");
      out.write("\t\t\tvar pntNm = $(this).children('td').eq(1).text();\r\n");
      out.write("\t\t\tvar pntCd = $(this).attr('pntCd');\r\n");
      out.write("\t\t\tvar rsvtNo = $(this).attr('rsvtNo');\r\n");
      out.write("\t\t\tvar empCd = $(this).attr('empCd');\r\n");
      out.write("\t\t\tvar authList = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.viewAuthList()}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t  var data = {};\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tdata[csrfParameter]=csrfToken;\r\n");
      out.write("\t\t\t\tdata[\"pntCd\"] = pntCd;\r\n");
      out.write("\t\t\t\tdata[\"rsvtNo\"] = rsvtNo;\r\n");
      out.write("\t\t\t\tdata[\"empCd\"] = empCd;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\tfor(var i = 0; i < authList.length; i++){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\tif(authList[i].auth=='ROLE_NURSE'){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tSwal.fire({\r\n");
      out.write("\t\t\t\t\t  title: '\"'+pntNm+'\" '+'환자',\r\n");
      out.write("\t\t\t\t\t  text:'해당 환자의 접수를 진행 하시겠습니까?',\r\n");
      out.write("\t\t\t\t\t  icon: 'question',\r\n");
      out.write("\t\t\t\t\t  showCancelButton: true,\r\n");
      out.write("\t\t\t\t\t  confirmButtonColor: '#3085d6',\r\n");
      out.write("\t\t\t\t\t  cancelButtonColor: '#d33',\r\n");
      out.write("\t\t\t\t\t  confirmButtonText: '예',\r\n");
      out.write("\t\t\t\t\t  cancelButtonText : \"아니오\"\r\n");
      out.write("\t\t\t\t\t}).then((result)=> {\r\n");
      out.write("\t\t\t\t\t  if (result.isConfirmed) {\r\n");
      out.write("\t\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t    Swal.fire(\r\n");
      out.write("\t\t\t\t\t      '접수 완료!',\r\n");
      out.write("\t\t\t\t\t      '환자대기 목록에서 확인할 수 있습니다.',\r\n");
      out.write("\t\t\t\t\t      'success'\r\n");
      out.write("\t\t\t\t\t    )\r\n");
      out.write("\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t    //예약 상태 변경(접수완료 후 대기)\r\n");
      out.write("\t\t\t\t\t    $.ajax({\r\n");
      out.write("\t\t\t\t\t\t\turl:\"/reservation/waiting\",\r\n");
      out.write("\t\t\t\t\t\t\tmethod: \"post\",\r\n");
      out.write("\t\t\t\t\t\t\tdata: data,\r\n");
      out.write("\t\t\t\t\t\t\tsuccess: function(res) {\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t    \r\n");
      out.write("\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t}).then(function(){\r\n");
      out.write("\t\t\t\t\t\t$(\".swal2-confirm\").on(\"click\", function() {\r\n");
      out.write("\t\t\t\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t//환자 목록 출력 \r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"/reservation/patientsList\",\r\n");
      out.write("\t\tmethod:\"get\",\r\n");
      out.write("\t\tsuccess: function(res) {\r\n");
      out.write("\t\t\t//console.log(res)\r\n");
      out.write("\t\t\tvar option = '<option>=환자 코드 이름 생년월일=</option>';\r\n");
      out.write("\t\t\t$.each(res, function(i, v) {\r\n");
      out.write("\t\t\t\toption += '<option value=\"'+v.pntCd+'\">'+v.pntCd+' '+v.pntNm+' '+v.pntPrno.split('-')[0]+'</option>';\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t$(\"#serchPnt\").append(option);\r\n");
      out.write("\t\t\t$(\"#serchPnt\").niceSelect('update');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pntCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != null ||'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pntCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != ''){\r\n");
      out.write("\t\t\t\tvar pntcd = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pntCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\t\t\t//console.log($(option [name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pntCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"]).text())\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar ul = $(\".list\")[0];\r\n");
      out.write("\t\t\t\tvar li = $(\".option\");\r\n");
      out.write("\t\t\t\t//console.log(ul);\r\n");
      out.write("\t\t\t\t//console.log(li);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t \t\tfor(var i = 0; i < li.length; i++){\r\n");
      out.write("\t\t \t\t\tif($(li[i]).attr(\"data-value\") == pntcd){\r\n");
      out.write("\t\t \t\t\t\t$(li[i]).attr(\"class\", \"option focus selected\");\r\n");
      out.write("\t\t \t\t\t\t$(\".current\").text($(li[i]).text());\r\n");
      out.write("\t\t \t\t\t} \r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t\t \t\t//console.log($(\".current\").text())\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});//end of ajax\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("$(document).on(\"change\", \".selmajor\", function() {\r\n");
      out.write("\r\n");
      out.write("\tvar data2 = {};\r\n");
      out.write("\r\n");
      out.write("\tdata2[csrfParameter]=csrfToken;\r\n");
      out.write("\tdata2[\"major\"] = $('.selmajor option:selected').val();//옵션에서 선택한 벨류값\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"/reservation/resdoctorList\",\r\n");
      out.write("\t\tmethod: \"post\",\r\n");
      out.write("\t\tdata: data2,\r\n");
      out.write("\t\tdataType:\"html\",\r\n");
      out.write("\t\ttraditional:\"true\",\r\n");
      out.write("\t\tsuccess: function(res) {\r\n");
      out.write("\t\t\tvar html = $(\"<div>\").html(res);\r\n");
      out.write("\t\t\tvar contents = html.find(\"div#otheroutput\").html();\r\n");
      out.write("\t\t\t$(\"#resemplist\").html(contents);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("})\r\n");
      out.write("\t\r\n");
      out.write("\t//일정 클릭 시 이벤트\r\n");
      out.write("\t$(document).on(\"click\", \".fc-daygrid-event-harness\", function() {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//alert($(this).find(\".fc-event-title\").text().split(\" \")[1].trim())\r\n");
      out.write("\t\tvar data = {};\r\n");
      out.write("\t\r\n");
      out.write("\t\tdata[csrfParameter]=csrfToken;\r\n");
      out.write("\t\tdata[\"rsvtNo\"] = $(this).find(\".fc-event-title\").text().split(\" \")[1].trim();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar clickdate = $(this).parents(\"td\").attr(\"data-date\");\r\n");
      out.write("\t\tvar rtime = $(this).find(\".fc-event-time\").text()+\":00\";\r\n");
      out.write("\t\tvar rstime = rtime.split(':')[0]+rtime.split(':')[1];\r\n");
      out.write("\t\tvar sprtime = rtime.split(':')[0]+rtime.split(':')[1]+rtime.split(':')[2];\r\n");
      out.write("\t\t$(\"#detailresModal\").modal(\"show\")\r\n");
      out.write("\t\t$(\"#detailresModal\").find(\"#rsvDate\").attr(\"value\",$(this).parents(\"td\").attr(\"data-date\"));\r\n");
      out.write("\t\t$(\"#detailresModal\").find(\"#rsvTime\").attr(\"value\",sprtime);\r\n");
      out.write("\t\t$(\"#detailresModal\").find(\"#srsvTime\").attr(\"value\",$(this).find(\".fc-event-time\").text());\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"/reservation/findres\",\r\n");
      out.write("\t\t\tmethod:\"post\",\r\n");
      out.write("\t\t\tdata: data,\r\n");
      out.write("\t\t\tsuccess: function (res) {\r\n");
      out.write("\t\t\t\t//console.log(res) //여기!!!!!!!!!!!!!!!!\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#mhour\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#complete\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#srsvTime\").attr(\"readonly\",true);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#rsvDate\").attr(\"readonly\",true);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#pntNm\").attr(\"value\",res.pntNm);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#pntCd\").attr(\"value\",res.pntCd);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#rsvt\").attr(\"value\",res.pntNm);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#pntNm\").attr(\"readonly\",true);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#empNm\").attr(\"value\",res.empNm);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#empNm\").attr(\"readonly\",true);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#empCd\").attr(\"value\",res.empCd);\r\n");
      out.write(" \t\t\t\t\t$(\"#detailresModal\").find(\"#rsvtNo\").attr(\"value\",res.rsvtNo);\r\n");
      out.write(" \t\t\t\t\t$(\"#detailresModal\").find(\"#delres\").attr(\"value\",res.rsvtNo);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#symptoms\").text(res.symptoms);\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#symptoms\").attr(\"readonly\",true);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\tif(clickdate<currentdate || (clickdate==currentdate&&rstime<=currenttime)){\r\n");
      out.write("\t\t\t\t\t$(\"#delres\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\t\t$(\"#modires\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#rsvDate1\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\t}else if(currentdate<clickdate || (clickdate==currentdate&&currenttime<rstime)){\r\n");
      out.write("\t\t\t\t\t$(\"#delres\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t\t$(\"#modires\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t\t$(\"#detailresModal\").find(\"#rsvDate1\").css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})// end of ajax\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});//end of function\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("//Byte 수 체크 제한\r\n");
      out.write("function fnChkByte(obj, maxByte)\r\n");
      out.write("{\r\n");
      out.write("    var str = obj.value;\r\n");
      out.write("    var str_len = str.length;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    var rbyte = 0;\r\n");
      out.write("    var rlen = 0;\r\n");
      out.write("    var one_char = \"\";\r\n");
      out.write("    var str2 = \"\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    for(var i=0; i<str_len; i++)\r\n");
      out.write("    {\r\n");
      out.write("        one_char = str.charAt(i);\r\n");
      out.write("        if(escape(one_char).length > 4) {\r\n");
      out.write("            rbyte += 2;                                         //한글2Byte\r\n");
      out.write("        }else{\r\n");
      out.write("            rbyte++;                                            //영문 등 나머지 1Byte\r\n");
      out.write("        }\r\n");
      out.write("        if(rbyte <= maxByte){\r\n");
      out.write("            rlen = i+1;                                          //return할 문자열 갯수\r\n");
      out.write("        }\r\n");
      out.write("     }\r\n");
      out.write("     if(rbyte > maxByte)\r\n");
      out.write("     {\r\n");
      out.write("        // alert(\"한글 \"+(maxByte/2)+\"자 / 영문 \"+maxByte+\"자를 초과 입력할 수 없습니다.\");\r\n");
      out.write("        swal(\"메세지는 최대 \" + maxByte + \"byte를 초과할 수 없습니다.\", \"warning\");\r\n");
      out.write("//         alert(\"메세지는 최대 \" + maxByte + \"byte를 초과할 수 없습니다.\")\r\n");
      out.write("        str2 = str.substr(0,rlen);                                  //문자열 자르기\r\n");
      out.write("        obj.value = str2;\r\n");
      out.write("        fnChkByte(obj, maxByte);\r\n");
      out.write("     }\r\n");
      out.write("     else\r\n");
      out.write("     {\r\n");
      out.write("        document.getElementById('byteInfo').innerText = rbyte;\r\n");
      out.write("     }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//신규예약\r\n");
      out.write("function newres() {\r\n");
      out.write("\t\r\n");
      out.write("\tif($(\"#rsvTime\").val()==null ||$(\"#rsvTime\").val()==''){\r\n");
      out.write("\t\tswal(\"주의!\", \"예약 시간을 선택하세요.\", \"warning\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t$(\"#reservationVo\").submit();\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tvar pntCd = $(\"input [name=pntCd]\").attr(\"value\");\r\n");
      out.write("\t\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//selectbox의 진료과목 선택했을 때\r\n");
      out.write("$(document).on(\"change\",\"#selectmajor\", function() {\r\n");
      out.write("   \r\n");
      out.write("   //var data = {\"major\" : $(\"#selectmajor option:selected\").val()};\r\n");
      out.write("   \r\n");
      out.write("   var data = {};\r\n");
      out.write("\r\n");
      out.write("   data[csrfParameter]=csrfToken;\r\n");
      out.write("   data[\"major\"] = $(\"#selectmajor option:selected\").val();\r\n");
      out.write("   \r\n");
      out.write("   //예약 목록 내 의사 선택\r\n");
      out.write("   $.ajax({\r\n");
      out.write("      url:\"/reservation/doctorList\",\r\n");
      out.write("      method: \"post\",\r\n");
      out.write("      data: data,\r\n");
      out.write("      success: function(dres) {\r\n");
      out.write("         //console.log(dres);\r\n");
      out.write("         var listHtml = '<option value=\"\" label=\"=담당의사=\">=담당의사=</option>';\r\n");
      out.write("         if(dres!=''){\r\n");
      out.write("            for(var i in dres){\r\n");
      out.write("               listHtml +='<option id=\"optdoc\" label=\"'+dres[i].empNm+'\">'+dres[i].empNm+'_'+dres[i].empCd+'</option>';\r\n");
      out.write("            }\r\n");
      out.write("         }\r\n");
      out.write("         $(\"#chrDr\").html(listHtml);   \r\n");
      out.write("      }\r\n");
      out.write("   })\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   var data = {\"major\": $(\"#selectmajor option:selected\").val()};\r\n");
      out.write("\r\n");
      out.write("\t//진료부서 별 예약목록 출력(캘린더에)\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"/reservation/majorresList\",\r\n");
      out.write("\t\tmethod:\"get\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function (res) {\r\n");
      out.write("\t\t\tvar mList = new Array();\r\n");
      out.write("\t\t\t//console.log(mList)\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.each(res, function(i, v) {\r\n");
      out.write("\t\t\t\t$.each(v.reservation, function(j, k){\r\n");
      out.write("\t\t\t\t\tvar data = new Object();\r\n");
      out.write("\t\t\t\t\tdata.pntNm = k.pntNm;\r\n");
      out.write("\t\t\t\t\tdata.rsvtNo = k.rsvtNo;\r\n");
      out.write("\t\t\t\t\tdata.rsvtDt = k.rsvtDt;\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\tmList.push(data);\r\n");
      out.write("\t\t\t\t})\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\tvar jsonData = JSON.stringify(mList) ;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t    var Calendar = FullCalendar.Calendar;\r\n");
      out.write("\t\t    var Draggable = FullCalendar.Draggable;\r\n");
      out.write("\t\t    var calendarEl = document.getElementById('calendar');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    var events = mList.map(function(item) {\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\ttitle : item.pntNm +\" \"+ item.rsvtNo,\r\n");
      out.write("\t\t\t\t\tstart : item.rsvtDt.substring(0,4) + '-' + item.rsvtDt.substring(4,6) + '-' + item.rsvtDt.substring(6,8)  \r\n");
      out.write("\t\t\t\t\t\t\t+ \"T\" + item.rsvtDt.substring(8,10) + ':' + item.rsvtDt.substring(10,12) + ':'+item.rsvtDt.substring(12,14)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    // initialize the calendar\r\n");
      out.write("\t\t    // -----------------------------------------------------------------\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    var calendar = new Calendar(calendarEl, {\r\n");
      out.write("\t\t      headerToolbar: {\r\n");
      out.write("\t\t        left: 'prev,next today',\r\n");
      out.write("\t\t        center: 'title',\r\n");
      out.write("\t\t        right: 'dayGridMonth,timeGridWeek'\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      initialView: 'dayGridMonth',\r\n");
      out.write("\t\t      selectable:true,\r\n");
      out.write("\t\t      editable: true,\r\n");
      out.write("\t\t      droppable: true, // this allows things to be dropped onto the calendar\r\n");
      out.write("\t\t      drop: function(info) {\r\n");
      out.write("\t\t        // is the \"remove after drop\" checkbox checked?\r\n");
      out.write("\t\t        if (checkbox.checked) {\r\n");
      out.write("\t\t          // if so, remove the element from the \"Draggable Events\" list\r\n");
      out.write("\t\t          info.draggedEl.parentNode.removeChild(info.draggedEl);\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      locale:'ko',\r\n");
      out.write("\t\t      events: events,\r\n");
      out.write("\t\t      eventTimeFormat: {\r\n");
      out.write("\t\t\t\t    hour: '2-digit',\r\n");
      out.write("\t\t\t\t    minute: '2-digit',\r\n");
      out.write("\t\t\t\t    hour12: false\r\n");
      out.write("\t\t\t\t  }\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t    //console.log(events)\r\n");
      out.write("\t\t    calendar.render();\r\n");
      out.write("\t\t}//end of success\r\n");
      out.write("\t});//end of ajax\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tif($(\"#selectmajor option:selected\").val().trim() == '전체부서'){\r\n");
      out.write("\t\r\n");
      out.write("\t\t//전체 예약목록 출력\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"/reservation/allList\",\r\n");
      out.write("\t\t\tmethod:\"get\",\r\n");
      out.write("\t\t\tsuccess: function (res) {\r\n");
      out.write("\t\t\t\tvar list = res;\t\r\n");
      out.write("\t\t\t    var Calendar = FullCalendar.Calendar;\r\n");
      out.write("\t\t\t    var Draggable = FullCalendar.Draggable;\r\n");
      out.write("\t\t\t    var calendarEl = document.getElementById('calendar');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    var events = list.map(function(item) {\r\n");
      out.write("\t\t\t    \tconsole.log(events)\r\n");
      out.write("\t\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\t\ttitle : item.pntNm +\" \"+ item.rsvtNo,\r\n");
      out.write("\t\t\t\t\t\tstart : item.rsvDate + \"T\" + item.rsvTime\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    // initialize the calendar\r\n");
      out.write("\t\t\t    // -----------------------------------------------------------------\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t    var calendar = new Calendar(calendarEl, {\r\n");
      out.write("\t\t\t      headerToolbar: {\r\n");
      out.write("\t\t\t        left: 'prev,next today',\r\n");
      out.write("\t\t\t        center: 'title',\r\n");
      out.write("\t\t\t        right: 'dayGridMonth,timeGridWeek'\r\n");
      out.write("\t\t\t      },\r\n");
      out.write("\t\t\t      initialView: 'dayGridMonth',\r\n");
      out.write("\t\t\t      selectable:true,\r\n");
      out.write("\t\t\t      editable: true,\r\n");
      out.write("\t\t\t      droppable: true, // this allows things to be dropped onto the calendar\r\n");
      out.write("\t\t\t      drop: function(info) {\r\n");
      out.write("\t\t\t        // is the \"remove after drop\" checkbox checked?\r\n");
      out.write("\t\t\t        if (checkbox.checked) {\r\n");
      out.write("\t\t\t          // if so, remove the element from the \"Draggable Events\" list\r\n");
      out.write("\t\t\t          info.draggedEl.parentNode.removeChild(info.draggedEl);\r\n");
      out.write("\t\t\t        }\r\n");
      out.write("\t\t\t      },\r\n");
      out.write("\t\t\t      locale:'ko',\r\n");
      out.write("\t\t\t      events: events,\r\n");
      out.write("\t\t\t      eventTimeFormat: {\r\n");
      out.write("\t\t\t\t\t    hour: '2-digit',\r\n");
      out.write("\t\t\t\t\t    minute: '2-digit',\r\n");
      out.write("\t\t\t\t\t    hour12: false\r\n");
      out.write("\t\t\t\t\t  }\r\n");
      out.write("\t\t\t    });\r\n");
      out.write("\t\t\t    //console.log(events)\r\n");
      out.write("\t\t\t    calendar.render();\r\n");
      out.write("\t\t\t}//end of success\r\n");
      out.write("\t\t});//end of ajax\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar data = {};\r\n");
      out.write("\r\n");
      out.write("\t\t   data[csrfParameter]=csrfToken;\r\n");
      out.write("\t\t   data[\"major\"] = $(\"#selectmajor option:selected\").val();\r\n");
      out.write("\t\t   \r\n");
      out.write("\t\t  $.ajax({\r\n");
      out.write("\t\t \t\turl:\"/reservation/resdoctorList\",\r\n");
      out.write("\t\t \t\tmethod:\"post\",\r\n");
      out.write("\t\t \t\tdata : data,\r\n");
      out.write("\t\t \t\tdataType:\"html\",\r\n");
      out.write("\t\t\t\ttraditional:\"true\",\r\n");
      out.write("\t\t \t\tsuccess: function (res) {\r\n");
      out.write("\t\t \t\t\tvar html = $(\"<div>\").html(res);\r\n");
      out.write("\t\t\t\t\tvar contents = html.find(\"div#output\").html();\r\n");
      out.write("\t\t\t\t\t$(\"#resemplist\").html(contents);\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t\t });\r\n");
      out.write("\t\t  \r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("//의사 선택했을 때 \r\n");
      out.write("$(document).on(\"change\",\"#chrDr\", function() {\r\n");
      out.write("\tvar data = {};\r\n");
      out.write("\tvar split = $(\"#chrDr option:selected\").val().split('_');\r\n");
      out.write("\t\r\n");
      out.write("\tdata[csrfParameter]=csrfToken;\r\n");
      out.write("\tdata[\"empCd\"] = split[1].trim();\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#empCd\").attr(\"value\", split[1].trim());\r\n");
      out.write("\t$(\"#empNm\").attr(\"value\", split[0].trim());\r\n");
      out.write("\t\r\n");
      out.write("\t//의사별 예약목록 출력(캘린더에)\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"/reservation/docList\",\r\n");
      out.write("\t\tmethod:\"post\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function (res) {\r\n");
      out.write("\t\t\tvar list = res;\r\n");
      out.write("\t\t\t//console.log(list)\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t    var Calendar = FullCalendar.Calendar;\r\n");
      out.write("\t\t    var Draggable = FullCalendar.Draggable;\r\n");
      out.write("\t\t    var calendarEl = document.getElementById('calendar');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    var events = list.map(function(item) {\r\n");
      out.write("\t\t\t\treturn {\r\n");
      out.write("\t\t\t\t\ttitle : item.pntNm +\" \"+ item.rsvtNo,\r\n");
      out.write("\t\t\t\t\tstart : item.rsvDate + \"T\" + item.rsvTime\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    // initialize the calendar\r\n");
      out.write("\t\t    // -----------------------------------------------------------------\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    var calendar = new Calendar(calendarEl, {\r\n");
      out.write("\t\t      headerToolbar: {\r\n");
      out.write("\t\t        left: 'prev,next today',\r\n");
      out.write("\t\t        center: 'title',\r\n");
      out.write("\t\t        right: 'dayGridMonth,timeGridWeek'\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      initialView: 'dayGridMonth',\r\n");
      out.write("\t\t      nowIndicator: true,\r\n");
      out.write("\t\t      selectable:true,\r\n");
      out.write("\t\t      editable: true,\r\n");
      out.write("\t\t      droppable: true, // this allows things to be dropped onto the calendar\r\n");
      out.write("\t\t      drop: function(info) {\r\n");
      out.write("\t\t        // is the \"remove after drop\" checkbox checked?\r\n");
      out.write("\t\t        if (checkbox.checked) {\r\n");
      out.write("\t\t          // if so, remove the element from the \"Draggable Events\" list\r\n");
      out.write("\t\t          info.draggedEl.parentNode.removeChild(info.draggedEl);\r\n");
      out.write("\t\t        }\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      locale:'ko',\r\n");
      out.write("\t\t      dateClick:function(info){\r\n");
      out.write("\t\t    \tvar day = new Date();\r\n");
      out.write("\t\t    \t  var year = day.getFullYear();\r\n");
      out.write("\t\t    \t  var month = ('0' + (day.getMonth() + 1)).slice(-2);\r\n");
      out.write("\t\t    \t  var day = ('0' + day.getDate()).slice(-2);\r\n");
      out.write("\t\t    \t  var pntinfo = $('.current').text();\r\n");
      out.write("\t\t    \t  var pntsplit = pntinfo.split(' ');\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    \t  var todayFormat = year + '-' + month  + '-' + day;\r\n");
      out.write("\t\t    \t  \r\n");
      out.write("\t\t    \t  $(\"#pntNm\").attr(\"value\", pntsplit[1].trim());\r\n");
      out.write("\t\t    \t  $(\"#pntCd\").attr(\"value\", pntsplit[0].trim());\r\n");
      out.write("\t\t    \t  \r\n");
      out.write("\t\t    \t $('#serchPnt > option:selected').val()\r\n");
      out.write("\t\t    \t\tif($(\".current\").text().trim() == '=환자 코드 이름 생년월일='){\r\n");
      out.write("\t\t    \t\t\tswal(\"주의!\", \"환자를 선택하세요.\", \"warning\");\r\n");
      out.write("\t\t    \t\t\t\r\n");
      out.write("\t\t    \t\t}else{\r\n");
      out.write("\t\t    \t\t\t\r\n");
      out.write("\t\t\t\t    \t  if(info.dateStr < todayFormat){\r\n");
      out.write("\t\t\t\t    \t\t  swal(\"예약 불가\",\"예약은 오늘 날짜 이후부터 가능합니다.\", \"warning\");\r\n");
      out.write("\t\t\t\t    \t  }else if(todayFormat <= info.dateStr){\r\n");
      out.write("\t\t\t\t\t      \t$(\"#exampleModal\").modal(\"show\");\r\n");
      out.write("\t\t\t\t\t      \t$(\"#rsvDate\").attr(\"value\", info.dateStr)    \t\t  \r\n");
      out.write("\t\t\t\t    \t  }\r\n");
      out.write("\t\t    \t\t}\r\n");
      out.write("\t\t      },\r\n");
      out.write("\t\t      events: events,\r\n");
      out.write("\t\t      eventTimeFormat: {\r\n");
      out.write("\t\t\t\t    hour: '2-digit',\r\n");
      out.write("\t\t\t\t    minute: '2-digit',\r\n");
      out.write("\t\t\t\t    hour12: false\r\n");
      out.write("\t\t\t\t  }\r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t    calendar.render();\r\n");
      out.write("\t\t}//end of success\r\n");
      out.write("\t});//end of ajax\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//캘린더의 날짜를 클릭했을 때 \r\n");
      out.write("\t$(document).on(\"click\", \".fc-daygrid-day\", function(){\r\n");
      out.write("\t\r\n");
      out.write("\t\tvar child = $(this).find(\".fc-event-time\");\r\n");
      out.write("\t\t//console.log(child)\r\n");
      out.write("\t\tchildVal = '';\r\n");
      out.write("\t\tfor(var i=0; i<child.length;i++){\r\n");
      out.write("\t\t\tchildVal += child.eq(i).text()+\"/\"\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar arr = childVal.split('/')\t//해당날짜에 예약되어있는 시간\r\n");
      out.write("\t\t//console.log(\"arr\", arr)\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t clickdate = $(this).attr('data-date')\t//클릭한 날의 날짜 2022-03-31\r\n");
      out.write("\t\t \r\n");
      out.write("\t\tvar values = $.map($('#hour option'), function(e) { return e.value; }); \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//console.log(\"dd\"+values)\r\n");
      out.write("\t\t//console.log(currentdate.trim())\r\n");
      out.write("\t\t//console.log(clickdate.trim())\r\n");
      out.write("\r\n");
      out.write("\t\tfor(var i=1; i<values.length; i++){\r\n");
      out.write("\t\t\tif(values[i]<= currenttime && currentdate.trim() == clickdate.trim()){\r\n");
      out.write("\t\t\t\t//console.log($(\"#hour option:contains(\"+values[i]+\")\").val())\r\n");
      out.write("\t\t\t\t$(\"#hour option:contains(\"+values[i]+\")\").css(\"color\", \"lightgray\")\r\n");
      out.write("\t\t\t\t$(\"#hour option:contains(\"+values[i]+\")\").attr(\"disabled\", true)\r\n");
      out.write("\t\t\t}else if(!(currentdate.trim() == clickdate.trim())){\r\n");
      out.write("\t\t\t\t$(\"#hour option:contains(\"+values[i]+\")\").css(\"color\", \"black\")\r\n");
      out.write("\t\t\t\t$(\"#hour option:contains(\"+values[i]+\")\").attr(\"disabled\", false)\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var j=0; j<arr.length; j++){\r\n");
      out.write("\t\t\t\tif(values[i] == arr[j]){\r\n");
      out.write("\t\t\t\t\t//console.log(\"ddddd\"+$(\"#hour option:contains(\"+values[i]+\")\").val())\r\n");
      out.write("\t\t\t\t\t$(\"#hour option:contains(\"+values[i]+\")\").css(\"color\", \"lightgray\")\r\n");
      out.write("\t\t\t\t\t$(\"#hour option:contains(\"+values[i]+\")\").attr(\"disabled\", true)\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//예약 시간 출력\r\n");
      out.write("$(document).on(\"change\",\"#hour\", function() {\r\n");
      out.write("\t\tvar timevalue = $(\"#hour option:selected\").val();\r\n");
      out.write("\t\tvar timeVal = $(\"#rsvTime\").attr(\"value\", timevalue+\":00\")\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("//수정버튼 클릭 시 \r\n");
      out.write("function modires() {\r\n");
      out.write("\t$(\"#detailresModal\").find(\"#mhour\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t//$(\"#detailresModal\").find(\"#rsvTime\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t//$(\"#detailresModal\").find(\"#rsvTime\").attr(\"disabled\",false);\r\n");
      out.write("\t//$(\"#detailresModal\").find(\"#rsvDate\").attr(\"disabled\",true);\r\n");
      out.write("\t$(\"#detailresModal\").find(\"#symptoms\").attr(\"readonly\",false);\r\n");
      out.write("\t//alert($(\"#detailresModal\").find(\"#empCd\").attr(\"value\"))\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t$(\"#delres\").css(\"display\",\"none\");\r\n");
      out.write("\t$(\"#complete\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t$(\"#modires\").css(\"display\",\"none\");\r\n");
      out.write("\t$(\"#detailresModal\").find(\"#rsvDate1\").css(\"display\",\"inline-block\");\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\tif($('input[name=rsvDate1]').val() == null || $('input[name=rsvDate1]').val() == '' ){\r\n");
      out.write("\t\t$(\"#mhour\").attr(\"hidden\",true);\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t  $('#rsvDate1').change(function (){\r\n");
      out.write("\t\t  $(\"#mhour\").attr(\"hidden\",false);\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t  var date = $('#rsvDate1').val();\r\n");
      out.write("\t\t  $('input[name=rsvDate]').attr(\"value\", date);\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t\t//alert($(\"#detailresModal\").find(\"#empCd\").attr(\"value\"))       //여기야!!!!!!!!!!!!!!!!!!!!!\r\n");
      out.write("\t\t  var data = {};\r\n");
      out.write("\t\t\tdata[csrfParameter]=csrfToken;\r\n");
      out.write("\t\t\tdata[\"empCd\"] = $(\"#detailresModal\").find(\"#empCd\").val();\r\n");
      out.write("\t\t\tdata[\"rsvDate\"] = $(\"#rsvDate\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl:\"/reservation/restime\",\r\n");
      out.write("\t\t \t\tmethod:\"post\",\r\n");
      out.write("\t\t \t\tdata : data,\r\n");
      out.write("\t\t \t\tsuccess: function (res) {\r\n");
      out.write("\t\t \t\t\t//console.log(res[0].rsvTime)\r\n");
      out.write("\t\t \t\t\t\r\n");
      out.write("\t\t \t\t\tvar hourval = $.map($('#mhour option'), function(e) { return e.value; }); \r\n");
      out.write("\t\t \t\t\t//console.log(hourval[1])\r\n");
      out.write("\t\t \t\t\t\r\n");
      out.write("\t\t \t\t\tfor(var i=1; i<hourval.length; i++){\r\n");
      out.write("\t\t \t\t\t\t\r\n");
      out.write("\t\t \t\t\t\tfor(var j=0; j<res.length; j++){\r\n");
      out.write("\t\t \t\t\t\t\tif(hourval[i] == res[j].rsvTime || hourval[i] <= currenttime){\r\n");
      out.write("\t\t \t\t\t\t\t\t//console.log($(\"#mhour option:contains(\"+hourval[i]+\")\").val())\r\n");
      out.write("\t\t \t\t\t\t\t\t$(\"#mhour option:contains(\"+hourval[i]+\")\").css(\"color\", \"lightgray\");\r\n");
      out.write("\t\t \t\t\t\t\t\t$(\"#mhour option:contains(\"+hourval[i]+\")\").attr(\"disabled\", true);\r\n");
      out.write("\t\t \t\t\t\t\t}\r\n");
      out.write("\t\t \t\t\t\t\t\r\n");
      out.write("\t\t \t\t\t\t}\r\n");
      out.write("\t\t \t\t\t}\r\n");
      out.write("\t\t \t\t\t\r\n");
      out.write("\t\t \t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#mhour\").on(\"change\", function() {\r\n");
      out.write("\t\t\t\tvar time = $(\"#mhour option:selected\").val()+\":00\";\r\n");
      out.write("\t\t\t\tvar spl = time.split(\":\");\r\n");
      out.write("\t\t\t\tvar spltime = spl[0]+spl[1]+spl[2]\r\n");
      out.write("\t\t\t\t$(\"#srsvTime\").attr(\"value\", $(\"#mhour option:selected\").val())\r\n");
      out.write("\t\t\t\t$(\"input[name=rsvTime]\").attr(\"value\", spltime)\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t\r\n");
      out.write("      });\r\n");
      out.write("}\r\n");
      out.write("//예약 수정 완료버튼 클릭 시 실행\r\n");
      out.write("function rescomp() {\r\n");
      out.write("\t$(reservationVo).submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//예약 삭제 시 실행 \r\n");
      out.write("function delres(d) {\r\n");
      out.write("\t\r\n");
      out.write("\tvar data = {};\r\n");
      out.write("\r\n");
      out.write("\tdata[csrfParameter]=csrfToken;\r\n");
      out.write("\tdata[\"rsvtNo\"] = d.value;\r\n");
      out.write("\tdata[\"pntCd\"] = $(\"#delres\").parent().prev().find(\"#pntCd\").val();\r\n");
      out.write("\t\r\n");
      out.write("\tSwal.fire({\r\n");
      out.write("\t\t  title: '정말로 삭제 하시겠습니까?',\r\n");
      out.write("\t\t  text: \"삭제한 데이터는 복구되지 않습니다.\",\r\n");
      out.write("\t\t  icon: 'warning',\r\n");
      out.write("\t\t  showCancelButton: true,\r\n");
      out.write("\t\t  confirmButtonColor: '#3085d6',\r\n");
      out.write("\t\t  cancelButtonColor: '#d33',\r\n");
      out.write("\t\t  confirmButtonText: 'delete'\r\n");
      out.write("\t\t}).then((result)=> {\r\n");
      out.write("\t\t  if (result.isConfirmed) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl:\"/reservation/resdelete\",\r\n");
      out.write("\t\t\t\tmethod: \"post\",\r\n");
      out.write("\t\t\t\tdata: data,\r\n");
      out.write("\t\t\t\tsuccess: function(rres) {\r\n");
      out.write("\t\t\t\t\t//console.log(rres);\t\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t    Swal.fire(\r\n");
      out.write("\t\t      '삭제 완료!',\r\n");
      out.write("\t\t      'Your file has been deleted.',\r\n");
      out.write("\t\t      'success'\r\n");
      out.write("\t\t    )\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t  else{\r\n");
      out.write("\t\t\t  $(\"#detailresModal\").modal('hide');\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t}).then(function(){\r\n");
      out.write("\t\t\t$(\".swal2-confirm\").on(\"click\", function() {\r\n");
      out.write("\t\t\t\tlocation.reload();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<div class=\"main_content_iner \">\r\n");
      out.write("\t<div class=\"container-fluid p-0\">\r\n");
      out.write("\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t<div class=\"col-12\">\r\n");
      out.write("\t\t\t\t<div class=\"QA_section\">\r\n");
      out.write("\t\t\t\t\t<div class=\"white_box calout\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"box_header border_bottom_1px  \">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"main-title\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h3 class=\"mb_25\">예약</h3>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<!-- 환자 검색 -->\r\n");
      out.write("\t\t\t\t\t\t<div style=\"width: 100%; display: inline-block;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"width: 200px; float: left; margin-right: 70px;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h6>환자 검색</h6>\r\n");
      out.write("\t\t\t\t\t\t\t\t<select class=\"nice_Select\" id=\"serchPnt\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 환자 검색 -->\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 의사  -->\r\n");
      out.write("\t\t\t\t\t\t\t<div style=\"width: auto; display: inline-block;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h6>담당 의사</h6>\r\n");
      out.write("\t\t\t\t\t\t\t\t");
      //  form:form
      org.springframework.web.servlet.tags.form.FormTag _jspx_th_form_005fform_005f0 = (org.springframework.web.servlet.tags.form.FormTag) _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction.get(org.springframework.web.servlet.tags.form.FormTag.class);
      boolean _jspx_th_form_005fform_005f0_reused = false;
      try {
        _jspx_th_form_005fform_005f0.setPageContext(_jspx_page_context);
        _jspx_th_form_005fform_005f0.setParent(null);
        // /WEB-INF/views/reservation/main.jsp(882,8) name = modelAttribute type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setModelAttribute("patientsVo");
        // /WEB-INF/views/reservation/main.jsp(882,8) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setName("patientsVo");
        // /WEB-INF/views/reservation/main.jsp(882,8) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setMethod("get");
        // /WEB-INF/views/reservation/main.jsp(882,8) name = action type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_form_005fform_005f0.setAction("/reservation/main");
        int[] _jspx_push_body_count_form_005fform_005f0 = new int[] { 0 };
        try {
          int _jspx_eval_form_005fform_005f0 = _jspx_th_form_005fform_005f0.doStartTag();
          if (_jspx_eval_form_005fform_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
            do {
              out.write("\r\n");
              out.write("\t\t\t\t\t\t\t\t\t");
              //  form:select
              org.springframework.web.servlet.tags.form.SelectTag _jspx_th_form_005fselect_005f0 = (org.springframework.web.servlet.tags.form.SelectTag) _005fjspx_005ftagPool_005fform_005fselect_0026_005fstyle_005fpath_005fid.get(org.springframework.web.servlet.tags.form.SelectTag.class);
              boolean _jspx_th_form_005fselect_005f0_reused = false;
              try {
                _jspx_th_form_005fselect_005f0.setPageContext(_jspx_page_context);
                _jspx_th_form_005fselect_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
                // /WEB-INF/views/reservation/main.jsp(884,9) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_form_005fselect_005f0.setPath("");
                // /WEB-INF/views/reservation/main.jsp(884,9) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                _jspx_th_form_005fselect_005f0.setId("selectmajor");
                // /WEB-INF/views/reservation/main.jsp(884,9) null
                _jspx_th_form_005fselect_005f0.setDynamicAttribute(null, "style", "margin-right:5px;");
                int[] _jspx_push_body_count_form_005fselect_005f0 = new int[] { 0 };
                try {
                  int _jspx_eval_form_005fselect_005f0 = _jspx_th_form_005fselect_005f0.doStartTag();
                  if (_jspx_eval_form_005fselect_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                    do {
                      out.write("\r\n");
                      out.write("\t\t\t\t\t\t\t\t\t\t");
                      //  form:option
                      org.springframework.web.servlet.tags.form.OptionTag _jspx_th_form_005foption_005f0 = (org.springframework.web.servlet.tags.form.OptionTag) _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody.get(org.springframework.web.servlet.tags.form.OptionTag.class);
                      boolean _jspx_th_form_005foption_005f0_reused = false;
                      try {
                        _jspx_th_form_005foption_005f0.setPageContext(_jspx_page_context);
                        _jspx_th_form_005foption_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fselect_005f0);
                        // /WEB-INF/views/reservation/main.jsp(885,10) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_form_005foption_005f0.setValue("");
                        // /WEB-INF/views/reservation/main.jsp(885,10) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_form_005foption_005f0.setLabel("=진료과목=");
                        int[] _jspx_push_body_count_form_005foption_005f0 = new int[] { 0 };
                        try {
                          int _jspx_eval_form_005foption_005f0 = _jspx_th_form_005foption_005f0.doStartTag();
                          if (_jspx_th_form_005foption_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            return;
                          }
                        } catch (java.lang.Throwable _jspx_exception) {
                          while (_jspx_push_body_count_form_005foption_005f0[0]-- > 0)
                            out = _jspx_page_context.popBody();
                          _jspx_th_form_005foption_005f0.doCatch(_jspx_exception);
                        } finally {
                          _jspx_th_form_005foption_005f0.doFinally();
                        }
                        _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody.reuse(_jspx_th_form_005foption_005f0);
                        _jspx_th_form_005foption_005f0_reused = true;
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005foption_005f0, _jsp_getInstanceManager(), _jspx_th_form_005foption_005f0_reused);
                      }
                      out.write("\r\n");
                      out.write("\t\t\t\t\t\t\t\t\t\t");
                      //  form:option
                      org.springframework.web.servlet.tags.form.OptionTag _jspx_th_form_005foption_005f1 = (org.springframework.web.servlet.tags.form.OptionTag) _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody.get(org.springframework.web.servlet.tags.form.OptionTag.class);
                      boolean _jspx_th_form_005foption_005f1_reused = false;
                      try {
                        _jspx_th_form_005foption_005f1.setPageContext(_jspx_page_context);
                        _jspx_th_form_005foption_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fselect_005f0);
                        // /WEB-INF/views/reservation/main.jsp(886,10) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_form_005foption_005f1.setValue("전체부서");
                        // /WEB-INF/views/reservation/main.jsp(886,10) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_form_005foption_005f1.setLabel("전체부서");
                        int[] _jspx_push_body_count_form_005foption_005f1 = new int[] { 0 };
                        try {
                          int _jspx_eval_form_005foption_005f1 = _jspx_th_form_005foption_005f1.doStartTag();
                          if (_jspx_th_form_005foption_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            return;
                          }
                        } catch (java.lang.Throwable _jspx_exception) {
                          while (_jspx_push_body_count_form_005foption_005f1[0]-- > 0)
                            out = _jspx_page_context.popBody();
                          _jspx_th_form_005foption_005f1.doCatch(_jspx_exception);
                        } finally {
                          _jspx_th_form_005foption_005f1.doFinally();
                        }
                        _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody.reuse(_jspx_th_form_005foption_005f1);
                        _jspx_th_form_005foption_005f1_reused = true;
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005foption_005f1, _jsp_getInstanceManager(), _jspx_th_form_005foption_005f1_reused);
                      }
                      out.write("\r\n");
                      out.write("\t\t\t\t\t\t\t\t\t\t");
                      //  c:forEach
                      org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
                      boolean _jspx_th_c_005fforEach_005f0_reused = false;
                      try {
                        _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
                        _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fselect_005f0);
                        // /WEB-INF/views/reservation/main.jsp(887,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                        _jspx_th_c_005fforEach_005f0.setVar("major");
                        // /WEB-INF/views/reservation/main.jsp(887,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
                        _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/reservation/main.jsp(887,10) '${majorlist}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${majorlist}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
                        int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
                        try {
                          int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
                          if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                            do {
                              out.write("\r\n");
                              out.write("\t\t\t\t\t\t\t\t\t\t\t");
                              //  form:option
                              org.springframework.web.servlet.tags.form.OptionTag _jspx_th_form_005foption_005f2 = (org.springframework.web.servlet.tags.form.OptionTag) _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody.get(org.springframework.web.servlet.tags.form.OptionTag.class);
                              boolean _jspx_th_form_005foption_005f2_reused = false;
                              try {
                              _jspx_th_form_005foption_005f2.setPageContext(_jspx_page_context);
                              _jspx_th_form_005foption_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
                              // /WEB-INF/views/reservation/main.jsp(888,11) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_form_005foption_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${major.major}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                              // /WEB-INF/views/reservation/main.jsp(888,11) name = label type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
                              _jspx_th_form_005foption_005f2.setLabel((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${major.major}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
                              int[] _jspx_push_body_count_form_005foption_005f2 = new int[] { 0 };
                              try {
                              int _jspx_eval_form_005foption_005f2 = _jspx_th_form_005foption_005f2.doStartTag();
                              if (_jspx_th_form_005foption_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                              return;
                              }
                              } catch (java.lang.Throwable _jspx_exception) {
                              while (_jspx_push_body_count_form_005foption_005f2[0]-- > 0)
                              out = _jspx_page_context.popBody();
                              _jspx_th_form_005foption_005f2.doCatch(_jspx_exception);
                              } finally {
                              _jspx_th_form_005foption_005f2.doFinally();
                              }
                              _005fjspx_005ftagPool_005fform_005foption_0026_005fvalue_005flabel_005fnobody.reuse(_jspx_th_form_005foption_005f2);
                              _jspx_th_form_005foption_005f2_reused = true;
                              } finally {
                              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005foption_005f2, _jsp_getInstanceManager(), _jspx_th_form_005foption_005f2_reused);
                              }
                              out.write("\r\n");
                              out.write("\t\t\t\t\t\t\t\t\t\t");
                              int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
                              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                              break;
                            } while (true);
                          }
                          if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                            return;
                          }
                        } catch (java.lang.Throwable _jspx_exception) {
                          while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
                            out = _jspx_page_context.popBody();
                          _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
                        } finally {
                          _jspx_th_c_005fforEach_005f0.doFinally();
                        }
                        _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
                        _jspx_th_c_005fforEach_005f0_reused = true;
                      } finally {
                        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
                      }
                      out.write("\r\n");
                      out.write("\t\t\t\t\t\t\t\t\t");
                      int evalDoAfterBody = _jspx_th_form_005fselect_005f0.doAfterBody();
                      if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                        break;
                    } while (true);
                  }
                  if (_jspx_th_form_005fselect_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                    return;
                  }
                } catch (java.lang.Throwable _jspx_exception) {
                  while (_jspx_push_body_count_form_005fselect_005f0[0]-- > 0)
                    out = _jspx_page_context.popBody();
                  _jspx_th_form_005fselect_005f0.doCatch(_jspx_exception);
                } finally {
                  _jspx_th_form_005fselect_005f0.doFinally();
                }
                _005fjspx_005ftagPool_005fform_005fselect_0026_005fstyle_005fpath_005fid.reuse(_jspx_th_form_005fselect_005f0);
                _jspx_th_form_005fselect_005f0_reused = true;
              } finally {
                org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fselect_005f0, _jsp_getInstanceManager(), _jspx_th_form_005fselect_005f0_reused);
              }
              out.write("\r\n");
              out.write("\r\n");
              out.write("\t\t\t\t\t\t\t\t\t");
              if (_jspx_meth_form_005fselect_005f1(_jspx_th_form_005fform_005f0, _jspx_page_context, _jspx_push_body_count_form_005fform_005f0))
                return;
              out.write("\r\n");
              out.write("\t\t\t\t\t\t\t\t");
              int evalDoAfterBody = _jspx_th_form_005fform_005f0.doAfterBody();
              if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                break;
            } while (true);
          }
          if (_jspx_th_form_005fform_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            return;
          }
        } catch (java.lang.Throwable _jspx_exception) {
          while (_jspx_push_body_count_form_005fform_005f0[0]-- > 0)
            out = _jspx_page_context.popBody();
          _jspx_th_form_005fform_005f0.doCatch(_jspx_exception);
        } finally {
          _jspx_th_form_005fform_005f0.doFinally();
        }
        _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction.reuse(_jspx_th_form_005fform_005f0);
        _jspx_th_form_005fform_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fform_005f0, _jsp_getInstanceManager(), _jspx_th_form_005fform_005f0_reused);
      }
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 의사  -->\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t\t\t<div id=\"calendar\" class=\"type2\"></div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 의사별 일정 보기 -->\r\n");
      out.write("\t\t\t\t\t<div class=\"dodiv\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"white_box\" style=\"height: 100%;\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"box_header border_bottom_1px  \">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"main-title\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h3 class=\"mb_25\">금일 예약 현황</h3>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div id=\"resemplist\" class=\"type2\">\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 예약 등록 Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("\taria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<h5 class=\"modal-title\" id=\"exampleModalLabel\">신규예약</h5>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_form_005fform_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" onclick=\"newres()\">등록</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 예약 상세 Modal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"detailresModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("\taria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t<div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<h5 class=\"modal-title\" id=\"exampleModalLabel\">예약상세</h5>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\taria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_form_005fform_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" id=\"delres\"\r\n");
      out.write("\t\t\t\t\tonclick=\"delres(this)\">삭제</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"modires\"\r\n");
      out.write("\t\t\t\t\tonclick=\"modires()\">수정</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"complete\"\r\n");
      out.write("\t\t\t\t\tonclick=\"rescomp()\">완료</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_form_005fselect_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:select
    org.springframework.web.servlet.tags.form.SelectTag _jspx_th_form_005fselect_005f1 = (org.springframework.web.servlet.tags.form.SelectTag) _005fjspx_005ftagPool_005fform_005fselect_0026_005fstyle_005fpath_005fid.get(org.springframework.web.servlet.tags.form.SelectTag.class);
    boolean _jspx_th_form_005fselect_005f1_reused = false;
    try {
      _jspx_th_form_005fselect_005f1.setPageContext(_jspx_page_context);
      _jspx_th_form_005fselect_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f0);
      // /WEB-INF/views/reservation/main.jsp(892,9) name = path type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fselect_005f1.setPath("chrDr");
      // /WEB-INF/views/reservation/main.jsp(892,9) name = id type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fselect_005f1.setId("chrDr");
      // /WEB-INF/views/reservation/main.jsp(892,9) null
      _jspx_th_form_005fselect_005f1.setDynamicAttribute(null, "style", "width:170px;");
      int[] _jspx_push_body_count_form_005fselect_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_form_005fselect_005f1 = _jspx_th_form_005fselect_005f1.doStartTag();
        if (_jspx_eval_form_005fselect_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_form_005fselect_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_form_005fselect_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005fselect_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005fselect_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005fselect_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005fselect_0026_005fstyle_005fpath_005fid.reuse(_jspx_th_form_005fselect_005f1);
      _jspx_th_form_005fselect_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fselect_005f1, _jsp_getInstanceManager(), _jspx_th_form_005fselect_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /WEB-INF/views/reservation/main.jsp(910,9) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("deptNm");
      // /WEB-INF/views/reservation/main.jsp(910,9) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/reservation/main.jsp(910,9) '${loginUser.deptNm}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${loginUser.deptNm}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/reservation/main.jsp(911,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${deptNm != '진료부'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t<select class=\"selmajor\" >\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t\t<option name=\"=진료부서=\" value=\"=진료부서=\">=진료부서=</option>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\t\r\n");
          out.write("\t\t\t\t\t\t\t\t\t\t</select>\r\n");
          out.write("\t\t\t\t\t\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/reservation/main.jsp(914,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("major");
      // /WEB-INF/views/reservation/main.jsp(914,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/reservation/main.jsp(914,10) '${majorlist}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${majorlist}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t\t<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${major.major}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${major.major}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            out.write("\t\t\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005fform_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:form
    org.springframework.web.servlet.tags.form.FormTag _jspx_th_form_005fform_005f1 = (org.springframework.web.servlet.tags.form.FormTag) _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction.get(org.springframework.web.servlet.tags.form.FormTag.class);
    boolean _jspx_th_form_005fform_005f1_reused = false;
    try {
      _jspx_th_form_005fform_005f1.setPageContext(_jspx_page_context);
      _jspx_th_form_005fform_005f1.setParent(null);
      // /WEB-INF/views/reservation/main.jsp(944,4) name = modelAttribute type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f1.setModelAttribute("reservationVo");
      // /WEB-INF/views/reservation/main.jsp(944,4) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f1.setMethod("post");
      // /WEB-INF/views/reservation/main.jsp(944,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f1.setName("addreservation");
      // /WEB-INF/views/reservation/main.jsp(944,4) name = action type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f1.setAction("/reservation/addreservation");
      int[] _jspx_push_body_count_form_005fform_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_form_005fform_005f1 = _jspx_th_form_005fform_005f1.doStartTag();
        if (_jspx_eval_form_005fform_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t");
            if (_jspx_meth_sec_005fcsrfInput_005f0(_jspx_th_form_005fform_005f1, _jspx_page_context, _jspx_push_body_count_form_005fform_005f1))
              return true;
            out.write("\r\n");
            out.write("\t담당 의사 : <input type=\"text\" class=\"input\" id=\"empNm\" name=\"empNm\">\r\n");
            out.write("\t\t\t\t\t<input type=\"text\" class=\"input\" id=\"empCd\" name=\"empCd\"\r\n");
            out.write("\t\t\t\t\t\tstyle=\"display: none;\">\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\t\r\n");
            out.write("\t예약 일자 : <input type=\"text\" class=\"input\" id=\"rsvDate\" name=\"rsvDate\">\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t예약 시간 : <select id=\"hour\">\r\n");
            out.write("\t\t\t\t\t\t<option>-선택-</option>\r\n");
            out.write("\t\t\t\t\t\t<option>09:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>09:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>10:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>10:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>11:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>11:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>13:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>13:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>14:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>14:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>15:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>15:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>16:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>16:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>17:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>17:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>18:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>18:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>19:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>19:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>20:00</option>\r\n");
            out.write("\t\t\t\t\t</select>\r\n");
            out.write("\t\t\t\t\t<input type=\"text\" class=\"input\" id=\"rsvTime\" name=\"rsvTime\"\r\n");
            out.write("\t\t\t\t\t\tstyle=\"display: none;\">\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\t\r\n");
            out.write("\t환자 이름 : <input type=\"text\" class=\"input\" id=\"pntNm\" name=\"pntNm\"\r\n");
            out.write("\t\t\t\t\t\tvalue=\"\">\r\n");
            out.write("\t\t\t\t\t<input type=\"text\" class=\"input\" id=\"pntCd\" name=\"pntCd\" value=\"\"\r\n");
            out.write("\t\t\t\t\t\tstyle=\"display: none;\">\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t내원 사유 : \r\n");
            out.write("\t<br>\r\n");
            out.write("\t\t\t\t\t<textarea id=\"symptoms\" name=\"symptoms\" cols=\"45\" rows=\"4\"\r\n");
            out.write("\t\t\t\t\t\tstyle=\"margin-left: 10px; resize: none;\"\r\n");
            out.write("\t\t\t\t\t\tonKeyUp=\"javascript:fnChkByte(this,'100')\"></textarea>\r\n");
            out.write("\t\t\t\t\t<div style=\"float: right;\">\r\n");
            out.write("\t\t\t\t\t\t<span id=\"byteInfo\">0</span>/100bytes\r\n");
            out.write("\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t");
            int evalDoAfterBody = _jspx_th_form_005fform_005f1.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_form_005fform_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005fform_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005fform_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005fform_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction.reuse(_jspx_th_form_005fform_005f1);
      _jspx_th_form_005fform_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fform_005f1, _jsp_getInstanceManager(), _jspx_th_form_005fform_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fcsrfInput_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:csrfInput
    org.springframework.security.taglibs.csrf.CsrfInputTag _jspx_th_sec_005fcsrfInput_005f0 = (org.springframework.security.taglibs.csrf.CsrfInputTag) _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.get(org.springframework.security.taglibs.csrf.CsrfInputTag.class);
    boolean _jspx_th_sec_005fcsrfInput_005f0_reused = false;
    try {
      _jspx_th_sec_005fcsrfInput_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fcsrfInput_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f1);
      int _jspx_eval_sec_005fcsrfInput_005f0 = _jspx_th_sec_005fcsrfInput_005f0.doStartTag();
      if (_jspx_th_sec_005fcsrfInput_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.reuse(_jspx_th_sec_005fcsrfInput_005f0);
      _jspx_th_sec_005fcsrfInput_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fcsrfInput_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fcsrfInput_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_form_005fform_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  form:form
    org.springframework.web.servlet.tags.form.FormTag _jspx_th_form_005fform_005f2 = (org.springframework.web.servlet.tags.form.FormTag) _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction.get(org.springframework.web.servlet.tags.form.FormTag.class);
    boolean _jspx_th_form_005fform_005f2_reused = false;
    try {
      _jspx_th_form_005fform_005f2.setPageContext(_jspx_page_context);
      _jspx_th_form_005fform_005f2.setParent(null);
      // /WEB-INF/views/reservation/main.jsp(1020,4) name = modelAttribute type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f2.setModelAttribute("reservationVo");
      // /WEB-INF/views/reservation/main.jsp(1020,4) name = method type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f2.setMethod("post");
      // /WEB-INF/views/reservation/main.jsp(1020,4) name = name type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f2.setName("modireservation");
      // /WEB-INF/views/reservation/main.jsp(1020,4) name = action type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_form_005fform_005f2.setAction("/reservation/modireservation");
      int[] _jspx_push_body_count_form_005fform_005f2 = new int[] { 0 };
      try {
        int _jspx_eval_form_005fform_005f2 = _jspx_th_form_005fform_005f2.doStartTag();
        if (_jspx_eval_form_005fform_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t");
            if (_jspx_meth_sec_005fcsrfInput_005f1(_jspx_th_form_005fform_005f2, _jspx_page_context, _jspx_push_body_count_form_005fform_005f2))
              return true;
            out.write("\r\n");
            out.write("\t\t\t\t\t<input type=\"hidden\" id=\"rsvtNo\" name=\"rsvtNo\">\r\n");
            out.write("\t담당 의사 : <input type=\"text\" class=\"input\" id=\"empNm\" name=\"empNm\">\r\n");
            out.write("\t\t\t\t\t<input type=\"hidden\" class=\"input\" id=\"empCd\" name=\"empCd\">\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\t\r\n");
            out.write("\t예약 일자 : \r\n");
            out.write("\t<input type=\"text\" class=\"input\" id=\"rsvDate\" name=\"rsvDate\">\r\n");
            out.write("\t\t\t\t\t<input type=\"date\" class=\"input\" id=\"rsvDate1\" name=\"rsvDate1\">\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t예약 시간 : \r\n");
            out.write("\t\t\t<input type=\"text\" class=\"input\" id=\"srsvTime\" name=\"srsvTime\">\r\n");
            out.write("\t\t\t\t\t<input type=\"hidden\" class=\"input\" id=\"rsvTime\" name=\"rsvTime\">\r\n");
            out.write("\t\t\t\t\t<select id=\"mhour\">\r\n");
            out.write("\t\t\t\t\t\t<option>-선택-</option>\r\n");
            out.write("\t\t\t\t\t\t<option>09:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>09:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>10:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>10:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>11:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>11:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>13:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>13:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>14:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>14:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>15:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>15:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>16:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>16:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>17:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>17:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>18:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>18:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>19:00</option>\r\n");
            out.write("\t\t\t\t\t\t<option>19:30</option>\r\n");
            out.write("\t\t\t\t\t\t<option>20:00</option>\r\n");
            out.write("\t\t\t\t\t</select>\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\t\r\n");
            out.write("\t환자 이름 : <input type=\"text\" class=\"input\" id=\"pntNm\" name=\"pntNm\"\r\n");
            out.write("\t\t\t\t\t\tvalue=\"\">\r\n");
            out.write("\t\t\t\t\t<input type=\"hidden\" class=\"input\" id=\"pntCd\" name=\"pntCd\" value=\"\">\r\n");
            out.write("\t\t\t\t\t<br>\r\n");
            out.write("\t\t\t\t\t<br>\t\r\n");
            out.write("\t내원 사유 : \r\n");
            out.write("\t<br>\r\n");
            out.write("\t\t\t\t\t<textarea id=\"symptoms\" name=\"symptoms\" cols=\"45\" rows=\"4\"\r\n");
            out.write("\t\t\t\t\t\tstyle=\"margin-left: 10px; resize: none;\"\r\n");
            out.write("\t\t\t\t\t\tonKeyUp=\"javascript:fnChkByte(this,'100')\"></textarea>\r\n");
            out.write("\t\t\t\t\t<div style=\"float: right;\">\r\n");
            out.write("\t\t\t\t\t\t<span id=\"byteInfo\">0</span>/100bytes\r\n");
            out.write("\t\t\t\t\t</div>\r\n");
            out.write("\t\t\t\t");
            int evalDoAfterBody = _jspx_th_form_005fform_005f2.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_form_005fform_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_form_005fform_005f2[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_form_005fform_005f2.doCatch(_jspx_exception);
      } finally {
        _jspx_th_form_005fform_005f2.doFinally();
      }
      _005fjspx_005ftagPool_005fform_005fform_0026_005fname_005fmodelAttribute_005fmethod_005faction.reuse(_jspx_th_form_005fform_005f2);
      _jspx_th_form_005fform_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_form_005fform_005f2, _jsp_getInstanceManager(), _jspx_th_form_005fform_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_sec_005fcsrfInput_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_form_005fform_005f2, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_form_005fform_005f2)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:csrfInput
    org.springframework.security.taglibs.csrf.CsrfInputTag _jspx_th_sec_005fcsrfInput_005f1 = (org.springframework.security.taglibs.csrf.CsrfInputTag) _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.get(org.springframework.security.taglibs.csrf.CsrfInputTag.class);
    boolean _jspx_th_sec_005fcsrfInput_005f1_reused = false;
    try {
      _jspx_th_sec_005fcsrfInput_005f1.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fcsrfInput_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_form_005fform_005f2);
      int _jspx_eval_sec_005fcsrfInput_005f1 = _jspx_th_sec_005fcsrfInput_005f1.doStartTag();
      if (_jspx_th_sec_005fcsrfInput_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.reuse(_jspx_th_sec_005fcsrfInput_005f1);
      _jspx_th_sec_005fcsrfInput_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fcsrfInput_005f1, _jsp_getInstanceManager(), _jspx_th_sec_005fcsrfInput_005f1_reused);
    }
    return false;
  }
}
