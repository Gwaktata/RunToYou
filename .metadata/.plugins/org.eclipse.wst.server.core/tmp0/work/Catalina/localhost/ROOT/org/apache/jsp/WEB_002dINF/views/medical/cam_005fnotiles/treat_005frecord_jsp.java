/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-04-16 08:16:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.medical.cam_005fnotiles;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class treat_005frecord_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1643079176937L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/final_project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/resources/vendors/niceselect/css/nice-select.css\" />\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/resources/css/ent/entCommon.css\" type=\"text/css\"/>\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"/resources/css/bootstrap.min.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 본문 컨텐츠 시작 -->\r\n");
      out.write("<div class=\"main_content_iner \">\r\n");
      out.write("\t<div class=\"container-fluid p-0\">\r\n");
      out.write("\t\t<div class=\"row justify-content-center\">\r\n");
      out.write("\t\t\t<div class=\"col-lg-12\">\r\n");
      out.write("\t\t\t\t<div class=\"messages_box_area1\">\r\n");
      out.write("\t\t\t\t\t<div class=\"messages_list\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"white_box shadow-sm mb-3\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"message_pre_left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"messges_info\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h4 class=\"mb-3\">진료기록</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<table class=\"table table-result\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>진료일</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"treatDt\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>주소</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td colspan=\"5\" id=\"pntAddr\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"pntNm\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>주민번호</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"pntPrno\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>키</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"height\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>체중</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"weight\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr class=\"border-bottom\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>담당의</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"empNm\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>연락처</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"pntHp\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>성별</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"sex\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th>연령</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<td id=\"age\"></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"px-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h5>진찰소견</h5>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p id=\"treatOp\"></p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"px-3\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h5>[처방]</h5>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p></p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<table class=\"table table-drug mt-4\" id=\"drugTable\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"*\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"80px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"80px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<col width=\"120px\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">약품명</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">일일 복용량</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">일회 복용량</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">처방기간</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tbody id=\"drugTable\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"img-content\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"img-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h5 class=\"img-title\" id=\"pntImageBackdropLabel\">환자이미지</h5>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"img-body\" id=\"img-list\"></div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"img-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h5 class=\"img-title\">검사이미지</h5>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"img-body\" id=\"img-list2\"></div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t\t\t\t<div class=\"text-right mb-5\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<button class=\"btn btn-info btn-pill px-5\" type=\"button\" data-toggle=\"modal\" -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t\tdata-target=\"#pntImageBackdrop\">사진보기</button> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t<button class=\"btn btn-info btn-pill px-5\" type=\"button\" -->\r\n");
      out.write("<!-- \t\t\t\t\t\t\t\tonclick=\"location.href='/medical/main'\">돌아가기</button> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t</div> -->\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"loding-center\">\r\n");
      out.write("\t\t<div class=\"spinner-border\" role=\"status\">\r\n");
      out.write("\t\t\t<span class=\"sr-only\">Loading...</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 사진 Modal -->\r\n");
      out.write("<!-- <div class=\"modal fade\" id=\"pntImageBackdrop\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" -->\r\n");
      out.write("<!-- \taria-labelledby=\"pntImageBackdropLabel\" aria-hidden=\"true\"> -->\r\n");
      out.write("<!-- \t<div class=\"modal-dialog modal-dialog-centered modal-xl\"> -->\r\n");
      out.write("<!-- \t\t<div class=\"modal-content\"> -->\r\n");
      out.write("<!-- \t\t\t<div class=\"modal-header\"> -->\r\n");
      out.write("<!-- \t\t\t\t<h5 class=\"modal-title\" id=\"pntImageBackdropLabel\">환자이미지</h5> -->\r\n");
      out.write("<!-- \t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t<span aria-hidden=\"true\">&times;</span> -->\r\n");
      out.write("<!-- \t\t\t\t</button> -->\r\n");
      out.write("<!-- \t\t\t</div> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t<div class=\"modal-body\" id=\"img-list\"></div> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t<div class=\"modal-header\"> -->\r\n");
      out.write("<!-- \t\t\t\t<h5 class=\"modal-title\">검사이미지</h5> -->\r\n");
      out.write("<!-- \t\t\t</div> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t<div class=\"modal-body\" id=\"img-list2\"></div> -->\r\n");
      out.write("\r\n");
      out.write("<!-- \t\t\t<div class=\"modal-footer\"> -->\r\n");
      out.write("<!-- \t\t\t\t<button type=\"button\" class=\"btn btn-primary\"><i class=\"fa fa-angle-left\"></i></button> -->\r\n");
      out.write("<!-- \t\t\t\t<button type=\"button\" class=\"btn btn-primary\"><i class=\"fa fa-angle-right\"></i></button> -->\r\n");
      out.write("<!-- \t\t\t\t<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">닫기</button> -->\r\n");
      out.write("<!-- \t\t\t</div> -->\r\n");
      out.write("<!-- \t\t</div> -->\r\n");
      out.write("<!-- \t</div> -->\r\n");
      out.write("<!-- </div> -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"/resources/js/jquery-3.4.1.min.js\"></script>\r\n");
      out.write("<script src=\"/resources/vendors/niceselect/js/jquery.nice-select.min.js\"></script>\r\n");
      out.write("<script src=\"https://unpkg.com/sweetalert/dist/sweetalert.min.js\"></script> <!-- 이쁜 alert 창 -->\r\n");
      out.write("<!-- <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@9\"></script> -->\r\n");
      out.write("<style>\r\n");
      out.write("\t.loding-center {\r\n");
      out.write("\t\twidth: 100%;\r\n");
      out.write("\t\tposition: relative;\r\n");
      out.write("\t\tz-index: 1;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.spinner-border {\r\n");
      out.write("\t\tdisplay: block;\r\n");
      out.write("\t\tposition: fixed;\r\n");
      out.write("\t\ttop: calc(50% - (58px/ 2));\r\n");
      out.write("\t\tright: calc(50% - (58px/ 2));\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\ttable.dataTable tbody td {\r\n");
      out.write("\t\tpadding: 10px;\r\n");
      out.write("\t\tfont-size: 14px;\r\n");
      out.write("\t\tcolor: #000000;\r\n");
      out.write("\t\tfont-weight: 300;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t.dataTables_filter input {\r\n");
      out.write("\t\tborder-width: 1px;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\ttable.dataTable tbody tr:hover {\r\n");
      out.write("\t\tbackground-color: #eaf2f3 !important;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\t/** 함수 주석 양식\r\n");
      out.write("\t * 메뉴 항목을 추가한다.\r\n");
      out.write("\t * @param {string} id 항목에 대한 고유 식별자\r\n");
      out.write("\t * @param {string} url 항목 아이콘\r\n");
      out.write("\t * @param {string} title 항목 타이틀\r\n");
      out.write("\t * @param {function} callback 실행에 대한 호출 함수\r\n");
      out.write("\t * @returns {boolean} 성공 여부\r\n");
      out.write("\t */\r\n");
      out.write("\t$(document).ready(function () {\r\n");
      out.write("\r\n");
      out.write("\t\t$('.spinner-border').hide();\r\n");
      out.write("\t\tlet treatCd = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.treatCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\tlet pntCd = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.pntCd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\r\n");
      out.write("\t\tfnCommonAjax('post', { 'treatCd': treatCd, 'pntCd': pntCd }, '/medical/selectListTreatRecord', fnSelectDetailRecordSucess);\r\n");
      out.write("\r\n");
      out.write("\t\t// 환자사진 목록 조회\r\n");
      out.write("\t\tfnSelectListAllCam(treatCd);\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("\t// 환자사진 목록 조회 함수\r\n");
      out.write("\tconst fnSelectListAllCam = (treatCd) => {\r\n");
      out.write("\t\tfnCommonAjax('post', { 'treatCd': treatCd}, '/medical/selectListCam', fnSelectListCamSuccess1);\r\n");
      out.write("// \t\tfnCommonAjax('post', { 'treatCd': treatCd, 'fileCls': '검사사진' }, '/medical/selectListCam', fnSelectListCamSuccess2);\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 사진 목록 조회 성공 콜백함수\r\n");
      out.write("\tconst fnSelectListCamSuccess1 = (data) => {\r\n");
      out.write("\r\n");
      out.write("\t\t$('#img-list').html(\"\");\r\n");
      out.write("\r\n");
      out.write("\t\t// div 생성\r\n");
      out.write("\t\tvar result1 = \"\";\r\n");
      out.write("\t\tvar result2 = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\tvar dummys = data.response;\r\n");
      out.write("\t\tconsole.log(dummys)\r\n");
      out.write("\r\n");
      out.write("\t\tif (dummys.length > 0) {\r\n");
      out.write("\t\t\tconst splitedDummys = [];\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 7개씩 쪼개기\r\n");
      out.write("\t\t\tfor (let i = 0; i < dummys.length; i += 7) {\r\n");
      out.write("\t\t\t\tsplitedDummys.push(dummys.slice(i, i + 7));\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tfor (let dummys of splitedDummys) {\r\n");
      out.write("\t\t\t\tconst outerDiv = document.createElement(\"div\");\r\n");
      out.write("\t\t\t\touterDiv.className = \"row mb-3\";\r\n");
      out.write("\t\t\t\tvar clsFlag = true;\r\n");
      out.write("\t\t\t\tfor (let dummy of dummys) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tconst innerDiv = document.createElement(\"div\");\r\n");
      out.write("\t\t\t\t\tinnerDiv.className = \"col col-photo text-center\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tconst innerImg = document.createElement(\"img\");\r\n");
      out.write("\t\t\t\t\tinnerImg.className = \"rounded img-fluid\";\r\n");
      out.write("\t\t\t\t\tinnerImg.dataset.fileNo = dummy.fileNo;\r\n");
      out.write("\t\t\t\t\tinnerImg.src = dummy.base64img;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tconst innerP = document.createElement(\"p\");\r\n");
      out.write("\t\t\t\t\tinnerP.innerText = dummy.fileNm;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tinnerDiv.appendChild(innerImg);\r\n");
      out.write("\t\t\t\t\tinnerDiv.appendChild(innerP);\r\n");
      out.write("\t\t\t\t\touterDiv.appendChild(innerDiv);\r\n");
      out.write("\t\t\t\t\tif(dummy.fileCls!='환자사진'){\r\n");
      out.write("\t\t\t\t\t\tclsFlag = false;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(clsFlag){\r\n");
      out.write("\t\t\t\t\tresult1 += outerDiv.outerHTML; // innerHTML은 자신을 기준으로 부모 안 나옴, outerHTML은 자신을 기준으로 부모 포함 다 나옴\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tresult2 += outerDiv.outerHTML; // innerHTML은 자신을 기준으로 부모 안 나옴, outerHTML은 자신을 기준으로 부모 포함 다 나옴\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(result1.length == 0){\r\n");
      out.write("\t\t\t\tresult1 += '<div>사진이 없습니다.</div>';\r\n");
      out.write("\t\t\t}else if(result2.length == 0){\r\n");
      out.write("\t\t\t\tresult2 += '<div>사진이 없습니다.</div>';\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\tresult1 += '<div>사진이 없습니다.</div>';\r\n");
      out.write("\t\t\tresult2 += '<div>사진이 없습니다.</div>';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$('#img-list').html(result1);\r\n");
      out.write("\t\t$('#img-list2').html(result2);\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t// 검사 사진 목록 조회 성공 콜백함수\r\n");
      out.write("\tconst fnSelectListCamSuccess2 = (data) => {\r\n");
      out.write("\r\n");
      out.write("\t\t$('#img-list2').html(\"\");\r\n");
      out.write("\r\n");
      out.write("\t\t// div 생성\r\n");
      out.write("\t\tvar result = \"\";\r\n");
      out.write("\r\n");
      out.write("\t\tvar dummys = data.response;\r\n");
      out.write("\r\n");
      out.write("\t\tif (dummys.length > 0) {\r\n");
      out.write("\t\t\tconst splitedDummys = [];\r\n");
      out.write("\t\t\t// 7개씩 쪼개기\r\n");
      out.write("\t\t\tfor (let i = 0; i < dummys.length; i += 7) {\r\n");
      out.write("\t\t\t\tsplitedDummys.push(dummys.slice(i, i + 7));\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tfor (let dummys of splitedDummys) {\r\n");
      out.write("\t\t\t\tconst outerDiv = document.createElement(\"div\");\r\n");
      out.write("\t\t\t\touterDiv.className = \"row mb-3\";\r\n");
      out.write("\t\t\t\tfor (let dummy of dummys) {\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tconst innerDiv = document.createElement(\"div\");\r\n");
      out.write("\t\t\t\t\tinnerDiv.className = \"col col-photo text-center\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tconst innerImg = document.createElement(\"img\");\r\n");
      out.write("\t\t\t\t\tinnerImg.className = \"rounded img-fluid\";\r\n");
      out.write("\t\t\t\t\tinnerImg.dataset.fileNo = dummy.fileNo;\r\n");
      out.write("\t\t\t\t\tinnerImg.src = dummy.base64img;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tconst innerP = document.createElement(\"p\");\r\n");
      out.write("\t\t\t\t\tinnerP.innerText = dummy.fileNm;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tinnerDiv.appendChild(innerImg);\r\n");
      out.write("\t\t\t\t\tinnerDiv.appendChild(innerP);\r\n");
      out.write("\t\t\t\t\touterDiv.appendChild(innerDiv);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tresult += outerDiv.outerHTML; // innerHTML은 자신을 기준으로 부모 안 나옴, outerHTML은 자신을 기준으로 부모 포함 다 나옴\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t} else {\r\n");
      out.write("\t\t\tresult += '<div>사진이 없습니다.</div>'\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t$('#img-list2').html(result)\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tconst fnSelectDetailRecordSucess = (data) => {\r\n");
      out.write("\r\n");
      out.write("\t\tif (data.response != null) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tconsole.log('data.response');\r\n");
      out.write("// \t\t\tconsole.log(data.response);\r\n");
      out.write("\r\n");
      out.write("\t\t\tlet _obj = data.response[0]\r\n");
      out.write("\t\t\tconsole.log('_obj');\r\n");
      out.write("// \t\t\tconsole.log(_obj);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// Object의 key만큼 배열을 반복한다.\r\n");
      out.write("\t\t\tfor (let i in Object.keys(_obj)) {\r\n");
      out.write("\t\t\t\tvar _id = Object.keys(_obj)[i];\r\n");
      out.write("\t\t\t\tvar _text = _obj[Object.keys(_obj)[i]];\r\n");
      out.write("\t\t\t\t$('#' + _id).text(_text);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\tlet _drugList = _obj.prescription;\r\n");
      out.write("\r\n");
      out.write("\t\t\t_drugList.forEach(function (v, i) {\r\n");
      out.write("// \t\t\t\tconsole.log(v)\r\n");
      out.write("\t\t\t\t$(\"#drugTable tbody\").append('<tr><td>' + fnNullChange(v.drugNm) + '</td><td>' + fnNullChange(v.drugDoes) + '</td><td>' + fnNullChange(v.drugTimes) + '</td><td>' + fnNullChange(v.prspTerm) + '</td></tr>');\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t};\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tconst fnNullChange = (str) => {\r\n");
      out.write("\t\treturn str == null || str == '' || str == 'undefined' || str == undefined || str == 'null' ? \"\" : str;\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t/**\r\n");
      out.write("\t* ajax 공통호출 함수\r\n");
      out.write("\t* @param {string} 통신 method 타입\r\n");
      out.write("\t* @param {string} 서버로 전송하는 request 데이터\r\n");
      out.write("\t* @param {string} request 호출 주소\r\n");
      out.write("\t* @param {function} successFn 성공 콜백함수\r\n");
      out.write("\t*/\r\n");
      out.write("\tconst fnCommonAjax = (type, data, url, successFn) => {\r\n");
      out.write("\t\t// 로딩바 보이기\r\n");
      out.write("\t\t$('.spinner-border').show();\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\t'type': type\r\n");
      out.write("\t\t\t, 'data': data\r\n");
      out.write("\t\t\t, 'url': url\r\n");
      out.write("\t\t\t, beforeSend: function (jqXHR, settings) {\r\n");
      out.write("\t\t\t\t// ajax 사용시 헤더에 스프링시큐리티 토큰 설정\r\n");
      out.write("\t\t\t\tvar token = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("\t\t\t\tvar header = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.headerName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\r\n");
      out.write("\t\t\t\tjqXHR.setRequestHeader(header, token);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t, success: successFn\r\n");
      out.write("\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t.done((data) => {\r\n");
      out.write("\t\t\t// 로딩바 숨기기\r\n");
      out.write("\t\t\t$('.spinner-border').hide();\r\n");
      out.write("\t\t})\r\n");
      out.write("\r\n");
      out.write("\t\t.fail((data) => {\r\n");
      out.write("\t\t\tswal(\"\", \"통신에러 발생\", \"error\");\r\n");
      out.write("\t\t\t$('.spinner-border').hide();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- <div class=\"footer_part\"> -->\r\n");
      out.write("<!-- \t<div class=\"container\"> -->\r\n");
      out.write("<!-- \t\t<div class=\"row\"> -->\r\n");
      out.write("<!-- \t\t\t<div class=\"col-lg-12\"> -->\r\n");
      out.write("<!-- \t\t\t\t<div class=\"footer_iner text-center\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t<p>2020 © Influence - Designed by<a href=\"#\"><i class=\"ti-heart\"></i></a> -->\r\n");
      out.write("<!-- \t\t\t\t\t\t<a href=\"#\"> Dashboard</a> -->\r\n");
      out.write("<!-- \t\t\t\t\t</p> -->\r\n");
      out.write("<!-- \t\t\t\t</div> -->\r\n");
      out.write("<!-- \t\t\t</div> -->\r\n");
      out.write("<!-- \t\t</div> -->\r\n");
      out.write("<!-- \t</div> -->\r\n");
      out.write("<!-- </div> -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
